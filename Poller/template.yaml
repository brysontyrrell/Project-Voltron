AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Performs scheduled read operations on the Jamf Pro API for searchs and groups and publishes the results to an SNS topic.

Parameters:

  ObjectType:
    Type: String
    Description: ''
    AllowedValues:
      - Computers
      - MobileDevices
      - Users

  ObjectToPoll:
    Type: String
    Description: ''
    AllowedValues:
      - AdvancedSearch
      - Group

  ObjectId:
    Type: Number
    Description: ''

  Interval:
    Type: String
    Description: Scheduled execution in minutes.
    Default: 15
    AllowedValues:
      - 5
      - 10
      - 15
      - 30
      - 60

  JamfProDomain:
    Type: String
    Description: The domain name for the Jamf Pro server (e.g. jamf.my.org).

  JamfProUsername:
    Type: String
    Description: Username for Jamf Pro API access.

  JamfProPassword:
    Type: String
    Description: Password for Jamf Pro API access.
    NoEcho: true

Mappings:

  Computers:
    AdvancedSearch:
      URI: advancedcomputersearches
    Group:
      URI: computergroups

  MobileDevices:
    AdvancedSearch:
      URI: advancedmobiledevicesearches
    Group:
      URI: mobiledevicegroups

  Users:
    AdvancedSearch:
      URI: advancedusersearches
    Group:
      URI: usergroups

Resources:

  JamfPollerTopic:
    Type: AWS::SNS::Topic

  Poller:
    Type: AWS::Serverless::Function
    Description:
    Properties:
      Handler: poller.lambda_handler
      Runtime: python3.6
      CodeUri: ./src/functions/poller
      Timeout: 120
      Environment:
        Variables:
          POLLER_TOPIC: !Ref JamfPollerTopic
          JSS_USERNAME: !Ref JamfProUsername
          JSS_PASSWORD: !Ref JamfProPassword
          JSS_DOMAIN: !Ref JamfProDomain
          JSS_ENDPOINT:
            Fn::FindInMap: [!Ref ObjectType, !Ref ObjectToPoll, 'URI']
          JSS_OBJECT_ID: !Ref ObjectId
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt JamfPollerTopic.TopicName
      Events:
        PollerSchedule:
            Type: Schedule
            Properties:
              Schedule: !Sub 'rate(${Interval} minutes)'

Outputs:

  JamfPollerTopic:
    Value: !Ref JamfPollerTopic
    Export:
      Name: !Sub '${AWS::StackName}-JamfPollerTopic'
